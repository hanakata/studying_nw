第6章 ユーザの信頼と信用

アイデンティティ発行機関
ユーザにはそれぞれアイデンティティというものがある。
→認識する手段。
アイデンティティには2種類
・非公式のアイデンティティ
→権威のない組織が独自に作成するアイデンティティ。大体は情報システムで使用される。
　欠点としては以下
　・偽造可能
　・なりすまし可能
　・複数作成可能
　・共有利用可能
・正式なアイデンティティ
→権威のある機関または組織が発行するもの。運転免許証とかパスポートとか。

プライベートシステムでのアイデンティティの生成
コンピュータシステムとのやりとりをするためにはそれぞれのアイデンティティを
デジタル化する必要がある。
生成し人間と紐づけるためには高い機密性が必要。
そのため管理方法を十分に検討し厳格なポリシーを定義することが重要。

政府発行の識別証
本人確認のために推奨される手法の1つが政府発行の識別証の使用である。
ただしそのIDを検証するのは特別な訓練が必要。

物質界に勝るものなし
人間が関与する確認方式のほうがデジタル方式よりも強力である。
いかなる場合でも人間の新しいアイデンティティはじかに生成する方が良い。

期待値
デジタルアイデンティティの生成に先だって多くの情報が提供されるが、
正確な挙動を設定するには十分な量の情報を使用することが肝心。
期待値を適用するのは人。
期待値についてはユーザが話す言語からIDに記載される住所、ほかの独特の情報まで多種多様。

アイデンティティの格納
物質界から仮想界へ橋渡しするにあたりアイデンティティをビットに変換する必要がある。
これらは機密性が高く永続的に格納する必要がある。

ユーザディレクトリ
ユーザを信用する第1歩はユーザのレコードを一元管理する必要がある。
→ここにユーザが存在することが今後すべての認証のベースとなる。
容易ではないが避けることはできない。
ユーザ情報には機密性の高い情報も含まれる（位置とか電話番号など。
そのため1つのデータベースに格納するのではなく複数の独立したデータベースに分けることを検討。
データベースへのアクセスは制限付きAPIのみ使用。

ディレクトリの管理
ユーザディレクトリを正確に保つこと＝安全性を確保する上で非常に重要
組織のシステムには専用のアイデンティティシステムを組み込むのが得策。

いつ認証するか
ゼロトラストネットワークでは認証は義務。ただし工夫次第でセキュリティを大幅に強化しつつ、
同時に利便性も確保できる。

信用されるための認証
ユーザを認証する行為＝ユーザが確かに本人であることを確認するための手続き。
認証方式の強度はそれぞれで組み合わせで最も強度が高くなるものもある。
システムによってどの程度の強度が必要かは考える必要がある。

認証ドライバとしての信用
認証は信用を引き出す。ユーザを困った状況に陥らせないことが第一の目標。
→認証を義務づけるメカニズムとして信用スコアを使用するのは理にかなっている。
ユーザの信用スコアが高い場合それ以上の認証は求めないこと。
低ければ必ず認証を行うこと。
要は信用スコアを基準にしてどの認証フローを実施し要件を制御できることが重要。

複数の経路の使用
リクエストの認証と認可にリクエスト元へ複数の経路を利用するのは堅牢性が増す。

アイデンティティと信用のキャッシュ
クライアントの権限を頻繁に検証することは重要である。
この手続きはコントロールプレーンが信用スコアの変化を受けてデータプレーンのアプリケーションに
それらの変化を反映させるためのメカニズムの1つ。
一般的なSSOは望ましくない。

どのように認証するか
ユーザを認証する方法は以下3つ
・ユーザがしっているもの
→パスワード
　→良いパスワードは以下
　　・長い
　　・推測しにくい
　　・再利用しない
　　パスワードを保存する場合はハッシュ値を付けること
・ユーザが持っているもの
→制限時間付きのトークン
→証明書
　成熟していないネットワークでは信頼されるユーザディレクトリを作成するより証明書を使ったほうが
　安全に認証ができる。
→セキュリティトークン
　ハードウェアデバイスを持たせ、そのハードウェアデバイスに秘密鍵を生成するようにする。
　それを利用してユーザがそのデバイスの持ち主であることを証明する。
　秘密鍵のハードウェアでの保管は現在圧倒的に安全な保管方法。
・ユーザ自身のもの
→生体認証
　生体認証として使えるものは以下
　・指紋
　・手形
　・網膜スキャン
　・音声分析
　・顔認識
　理想的な認証に思えるがスキャンを欺くことができればシステムへの認証は可能。
認証にはこれらのうち1つか複数使うようにする。
どの要素を複数使うかはユーザのデバイスによって変更すること。

アウトオブバンド認証
ユーザがリクエストの認証に使用した最初の通信経路とは別の経路を意図的に利用する認証。
例えばWebサイトにログインする場合、検証するために電話確認を行うといったような場合。

シングルサインオン
認証の一元化。メリットは以下
・ユーザの認証は1つのサービスでOK
・認証データは専用のサービスに格納される。そのためそこを厳重にすれば良い
・漏洩リスクの低下

ローカル認証への移行
信用されるデバイスでユーザ認証を行ったあとデバイスがその認証結果をリモートサービスで検証するもの。
メリットは以下
・チャレンジ/レスポンスシステムによりリプレイ攻撃を緩和できる
・ユーザがアクセスしているドメイン以外からのチャレンジに認証システムが署名しないことで中間者攻撃を阻止できる。
・サービスごとでクレデンシャルが生成できるので再利用されにくくなる。