第5章 デバイスの信頼と信用

信頼と信用を獲得する
一般に新しく導入されるデバイスにはその製造元や販売業者と同じレベルの信頼が与えられる。
信頼度はかなり高い。ただしこの信頼度は物理的なもの。
論理的なゼロトラストモデルに反映させるにはデバイスに物理的に注入し検証可能な信用できる状態にする必要がある。

アイデンティティの生成と保護
デバイスの識別に使用できる署名された証明書を提供する際にはその証明書に関連づけられている秘密鍵を安全な方法で保管する必要がある。
秘密鍵が入手できればデバイスを偽造できる。
これを防ぐ単純な方法はアクセス制御を設定すること。
→ただし安全ではない。管理者権限が取れれば何でもできてしまう。
秘密鍵を暗号化する
→アクセス許可よりまし。ただ複合するのにパスワードが必要なので使い勝手に問題がある。
保管するにはTPMと呼ばれるセキュアな領域が良い。

静的なシステムと動的なシステムでのアイデンティティのセキュリティ
静的なシステムでは新しいホストのプロビジョニングは運用者によって行われる。
インフラが拡大していけば人的負担が問題になる。
プロビジョニングと署名プロセスの自動化では新しい証明書の署名に人間が関与すべきかが重要な判断。
プロビジョニングが自動化されていても人間が管理しているという場合、
関連する署名リクエストの承認もその人物に管理させるのは当然。
ただし人間は完璧ではない。なのでワンタイムパスワードを利用する。
証明書の署名は大きな信頼を必要とする操作。
信頼を手に入れる選択肢は以下3つ。
・人間
・リソースマネージャー
・イメージまたはデバイス
静的なインフラであれば人間は手軽で安全。
自動化されたインフラであれば人間は役に立たない。

コントロールプレーンによるデバイスの認証
アイデンティティをネットワーク上で検証する方法を考える必要がある
・X.509
デバイスのアイデンティティと認証に関する規格の中で最も重要な規格。
最も優れた特徴の1つは認証に使用される公開鍵と秘密鍵のペアを暗号化された通信の確立にも使用できること。
・証明書チェーンと認証局
証明書が意味を持つ＝信用されなければならない
正しい名前が書かれた証明書ではなく、信頼される機関によるデジタル署名により
証明書の正当性を保証しなければならない。
・デバイスのアイデンティティとx.509
X.509証明書の主な用途は認証。
・公開鍵と秘密鍵
X.509証明書は2つの鍵を利用する。基本はRSA.
・秘密鍵の保管
秘密鍵の保管は非常に重要。漏洩すればまったく意味がなくなる。
保護する場合はHSMを利用すると良い。
・デバイス認証のためのX.509
ゼロトラストネットワークでX.509を応用するのはすばらしいこと。
考慮しなければならないのは秘密鍵はソフトウェア的なものであること。
なので盗み出されれば破綻する。
TPMを利用すれば秘密鍵とハードウェアを一体化させることができる。

TPM
TPM=コンピュートデバイスに埋め込まれる特殊なチップ。
暗号プロセッサとも呼ばれ信頼できる安全な方法で暗号処理を行うことを目的としている。
独自のファームウェアで動作するのでワンチップコンピュータと考えられている。

TPMを使ったデータの暗号化
TPMはSRKと呼ばれるものを生成し格納する。この鍵ペアはTPMデバイスの信頼ルートを表す。
暗号化されたものを復号できるのはおおもとのTPM内のSRKだけ。
大容量時は考慮が必要。

中間鍵とパスフレーズ
多くのTPMライブラリはTPMを使ってデータを暗号化するときに中間鍵を生成する。
そのライブラリはTPMに新しい非対称鍵ペアの作成を要求する。
そして中間鍵ペアの公開鍵を使ってAES鍵を暗号化した後、SRK使って秘密鍵を暗号化する。
復号化するときは中間鍵ペアの秘密鍵を復号し復号した秘密鍵を使ってAES鍵を復号化してから元のデータを復号化する。
こうなっている理由
・追加の暗号により保護されたデータを柔軟に配布できるようになること

PCR
PCR=TPMの重要な機能であり実行中のソフトウェアハッシュ値が格納されるストレージスロットを提供する
PCRの用途は様々だが承認されたソフトウェア設定でのみデータの復号を許可することが含まれる。

リモートアテステーション
秘密鍵が物理的にTPMの外側に保存される限り盗み出される可能性はある。
TPMにロックを一度解除させるだけで秘密鍵を復号化できる。
TPMの中に格納されていればこれらは不可能。

デバイス認証のためのTPM
成熟したゼロトラストネットワークにおいて強力なデバイス認証に対する最善の選択はTPMである。
制限として、仮想マシンやコンテナで使うためにはTPMによる仮想化を利用するようにしなければならない。
サポートが進んでいないことも制限の一つ

ハードウェアベースのゼロトラストサプリカント
ゼロトラストネットワークにおいて既存のデバイスをサポートする最も一般的な方法は認証プロキシを使用すること。
認証プロキシはゼロトラスト関係を終端し接続をレガシーホストに転送する。

インベントリ管理
デバイスのアイデンティティと完全性チェックは強力なゼロトラストセキュリティを提供する上で大きな役割を果たす。
反面デバイスを組織に属しているものとすることは課題の一部。
インベントリ管理ではデバイスとそれらのプロパティを分類する必要がある。

想定される挙動を把握する
ゼロトラストネットワークの効果の1つは何が想定されるのかが設定されていること。
この機能を実現するうえでインベントリデータベースは重要なコンポーネント。
データセンター内であればある程度想定することは可能だがクライアントは想定することは非常に困難。
なので単にサービスへのグローバルアクセスを許可しmTLSで保護するのが1つの方法。
欠点はサービスにグローバルアクセスできてしまうこと。
そういった場合、クライアント証明書を使うことでセキュリティは少しではあるが担保できる。

セキュアイントロダクション
新しいデバイスからの最初の接続は心もとない。なので最初の接続を認証できるようなメカニズムが必要
セキュアイントロダクションとは？
→信頼を伝播させるもの。
セキュアイントロダクションを実施する最善の方法は想定される挙動を定義すること。
よいセキュアイントロダクションシステムの条件
・使い捨て
・短命
・第三者
最近のChefはこういったやり方で行っている。

デバイスの信用の更新
どのようなレベルのセキュリティでも完ぺきではないことを認めなければならない。
この事実を認めることでこの影響を緩和する作業に着手できる。
当然ながらデバイスを運用する時間が長ければ長いほどセキュリティ侵害の可能性が高くなる＝信用が高い。
なのでローテーションは非常に重要。
デバイスの論理的なローテーションはイメージの再作成。
クライアントイメージのローテーションは難しい。なので長期稼働しているデバイスの信用を更新する
別の方法を考える必要がある。それはローカル測定とリモート測定。

ローカル測定
ローカル測定には以下2つがある。
・ハードウェア方式
・ソフトウェア方式
ハードウェア方式のほうが安全性と信頼性に優れているが能力が限られている。
ソフトウェア方式に限界はない。
ソフトウェア方式はエージェントを利用するためハードウェアより脆弱ではある。

リモート測定
ローカル測定よりはリモート測定のほうが望ましい。
→責務の分離が可能になるから。
ローカル測定であれば乗っ取ってしまえばどうとでもなる。
リモートは単純な脆弱性スキャンとして実行される。

ソフトウェアの構成管理
構成管理＝ソフトウェアのすべての変更を厳重に管理し文書化するプロセス。
対象となる設定は一般にコードまたはデータとして定義されバージョン管理システムに登録される。
構成管理ソフトウェアはクライアント環境でもデータセンターでも有益。
脆弱性対応等も対応が楽になる。

構成管理ベースのインベントリ
構成管理データベースは成熟したインベントリシステムに向かう最初の一歩でありインフラで実行されるさまざまな
ホストやソフトウェアに関する豊かな情報源になることがある。
構成管理システムはインベントリ管理として設計されておらず構成管理システムとして設計されているため、
インベントリ管理はおまけでしかない。それさえ理解しておけば構成管理システムのインベントリ管理をうまく使える。
例えば一元的に格納するものがあり、それは大体検索が可能になっている。
そういったものをうまく使っていく方が良い。

信頼できるセキュアな情報源
構成管理システムを使う場合、構成管理システムに提供されるデータの大部分が自己申告であることに注意。
乗っ取られたマシンは事実を報告しない可能性が高い。
自己申告されたものは事実ではなくヒントとしてとらえること。

ユーザの認可にデバイスデータを使用する
ゼロトラストモデルではデバイスとユーザ/アプリケーションの認証と認可が義務となる。
通常デバイスの認証はユーザ認証よりも先。この状況を利用すればもっと強力なユーザ認証が可能になる。
例えばデバイスの種類や支給場所に基づいたコンテキストをチェックする方法
またユーザ認証の頻度もよい目安の1つ。

信用のサイン
イメージの経過時間
デバイスがハックされている可能性は時間が経つほど飛躍的に高くなる。
エンドポイントのセキュリティ対策では寿命の長いデバイスや長期にわたって実行されるデバイスのリスクを低下させることが目標。

アクセス履歴
デバイス認証のパターンはユーザ認証のパターンと同様にリスクを理解する上で重要であり
振る舞いのフィルタリングにかわるものとしてうまく機能する。
しばらく見かけなかったデバイスは頻繁にやり取りしているデバイスよりも疑わしい。
問題のリクエストはリソースと結びついていることがある。
このコンテキストではデバイスとリソースをまとめて扱うのが賢明。

位置
ゼロトラストモデルにかんしては一般にネットワークの位置を断定することは目標ではない。
ただし突然の位置変更は信用を疑う目安として使える。
ちょっとした危険をはらんでいることは注意すべき。

ネットワーク通信パターン
通信パターンの変更についても疑うべき。
